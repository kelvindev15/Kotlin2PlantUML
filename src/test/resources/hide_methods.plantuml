@startuml
interface Vehicle<T> {
}

abstract class AbstractVehicle<T> {
}

class Bicycle<T,\nP> {
}

class Car<T : FourWheels<T, O, A>,\nO : Wheeled<T, O>,\nA : ComplexGeneric<T, O, A>> {
    +bike: Bicycle<T, O>
}

interface FourWheels<T,\nP,\nA> {
}

interface TwoWheels<T,\nP> {
}

interface Wheeled<T,\nP> {
}

Vehicle <|.. AbstractVehicle
AbstractVehicle <|-- Bicycle
TwoWheels <|.. Bicycle
AbstractVehicle <|-- Car
FourWheels <|.. Car
Wheeled <|-- FourWheels
Wheeled <|-- TwoWheels
Vehicle <|-- Wheeled
@enduml
